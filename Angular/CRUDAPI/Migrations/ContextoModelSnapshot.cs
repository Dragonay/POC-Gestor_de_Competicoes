// <auto-generated />
using System;
using CRUDAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CRUDAPI.Migrations
{
    [DbContext(typeof(Contexto))]
    partial class ContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CRUDAPI.Models.Categoria", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CompeticaoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompeticaoId");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("CRUDAPI.Models.Competicao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("BannerImagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CriadorUsuarioId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EtapaAnteriorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Modalidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CriadorUsuarioId");

                    b.HasIndex("EtapaAnteriorId");

                    b.ToTable("Competicoes");
                });

            modelBuilder.Entity("CRUDAPI.Models.Competidor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CriadorId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CriadorId");

                    b.ToTable("Competidores");
                });

            modelBuilder.Entity("CRUDAPI.Models.Confronto", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataTermino")
                        .HasColumnType("datetime2");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Confrontos");
                });

            modelBuilder.Entity("CRUDAPI.Models.ConfrontoInscricao", b =>
                {
                    b.Property<long>("ConfrontoId")
                        .HasColumnType("bigint");

                    b.Property<long>("InscricaoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConfrontoInscricaoPaiConfrontoId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConfrontoInscricaoPaiId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ConfrontoInscricaoPaiInscricaoId")
                        .HasColumnType("bigint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<bool>("WO")
                        .HasColumnType("bit");

                    b.HasKey("ConfrontoId", "InscricaoId");

                    b.HasIndex("InscricaoId");

                    b.HasIndex("ConfrontoInscricaoPaiConfrontoId", "ConfrontoInscricaoPaiInscricaoId");

                    b.ToTable("ConfrontoInscricao");
                });

            modelBuilder.Entity("CRUDAPI.Models.Inscricao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CategoriaId")
                        .HasColumnType("bigint");

                    b.Property<long>("CompetidorId")
                        .HasColumnType("bigint");

                    b.Property<int?>("Posição")
                        .HasColumnType("int");

                    b.Property<int>("StatusPagamento")
                        .HasColumnType("int");

                    b.Property<long>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CompetidorId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Inscricoes");
                });

            modelBuilder.Entity("CRUDAPI.Models.PagamentoInscricao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<long>("InscricaoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Moeda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorPago")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PagamentoInscricao");
                });

            modelBuilder.Entity("CRUDAPI.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("EmailConfirmado")
                        .HasColumnType("bit");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Sobrenome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CpfCnpj")
                        .IsUnique();

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("SenhaHash")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CRUDAPI.Models.Categoria", b =>
                {
                    b.HasOne("CRUDAPI.Models.Competicao", "Competicao")
                        .WithMany("Categorias")
                        .HasForeignKey("CompeticaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Competicao");
                });

            modelBuilder.Entity("CRUDAPI.Models.Competicao", b =>
                {
                    b.HasOne("CRUDAPI.Models.Usuario", "CriadorUsuario")
                        .WithMany()
                        .HasForeignKey("CriadorUsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CRUDAPI.Models.Competicao", "EtapaAnterior")
                        .WithMany()
                        .HasForeignKey("EtapaAnteriorId");

                    b.Navigation("CriadorUsuario");

                    b.Navigation("EtapaAnterior");
                });

            modelBuilder.Entity("CRUDAPI.Models.Competidor", b =>
                {
                    b.HasOne("CRUDAPI.Models.Usuario", "Criador")
                        .WithMany("Competidores")
                        .HasForeignKey("CriadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Criador");
                });

            modelBuilder.Entity("CRUDAPI.Models.ConfrontoInscricao", b =>
                {
                    b.HasOne("CRUDAPI.Models.Confronto", "Confronto")
                        .WithMany("ConfrontoInscricoes")
                        .HasForeignKey("ConfrontoId")
                        .IsRequired();

                    b.HasOne("CRUDAPI.Models.Inscricao", "Inscricao")
                        .WithMany("ConfrontoInscricoes")
                        .HasForeignKey("InscricaoId")
                        .IsRequired();

                    b.HasOne("CRUDAPI.Models.ConfrontoInscricao", "ConfrontoInscricaoPai")
                        .WithMany()
                        .HasForeignKey("ConfrontoInscricaoPaiConfrontoId", "ConfrontoInscricaoPaiInscricaoId");

                    b.Navigation("Confronto");

                    b.Navigation("ConfrontoInscricaoPai");

                    b.Navigation("Inscricao");
                });

            modelBuilder.Entity("CRUDAPI.Models.Inscricao", b =>
                {
                    b.HasOne("CRUDAPI.Models.Categoria", "Categoria")
                        .WithMany("Inscricoes")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRUDAPI.Models.Competidor", "Competidor")
                        .WithMany()
                        .HasForeignKey("CompetidorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CRUDAPI.Models.Usuario", "Usuario")
                        .WithMany("Inscricoes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Competidor");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CRUDAPI.Models.Categoria", b =>
                {
                    b.Navigation("Inscricoes");
                });

            modelBuilder.Entity("CRUDAPI.Models.Competicao", b =>
                {
                    b.Navigation("Categorias");
                });

            modelBuilder.Entity("CRUDAPI.Models.Confronto", b =>
                {
                    b.Navigation("ConfrontoInscricoes");
                });

            modelBuilder.Entity("CRUDAPI.Models.Inscricao", b =>
                {
                    b.Navigation("ConfrontoInscricoes");
                });

            modelBuilder.Entity("CRUDAPI.Models.Usuario", b =>
                {
                    b.Navigation("Competidores");

                    b.Navigation("Inscricoes");
                });
#pragma warning restore 612, 618
        }
    }
}
